apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: curd
            - name: MYSQL_USER
              value: u1
            - name: MYSQL_PASSWORD
              value: password
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-storage
          emptyDir: {}
        - name: init-sql
          configMap:
            name: init-sql

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-sql
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS curd;
    CREATE TABLE users (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        age INT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-app
          image: rahees9983/curd-flask-mysql-flask-app:v1
          env:
            - name: MYSQL_HOST
              value: mysql
            - name: MYSQL_USER
              value: u1
            - name: MYSQL_PASSWORD
              value: password
            - name: MYSQL_DATABASE
              value: curd
          ports:
            - containerPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: flask-app
spec:
  type: NodePort  
  ports:
    - port: 5000
      targetPort: 5000
      nodePort: 30003
  selector:
    app: flask-app
